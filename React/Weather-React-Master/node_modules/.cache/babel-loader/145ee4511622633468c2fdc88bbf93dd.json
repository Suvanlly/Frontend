{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/weather-app-react-master/src/components/ForecastHour.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nimport device from '../responsive/Device';\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nconst ForecastHour = props => {\n  const temp = props.temp,\n        month = props.month,\n        day = props.day,\n        hour = props.hour,\n        icon = props.icon;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n  return React.createElement(ForecastWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, month, \".\", day), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, hour, \":00\"), React.createElement(WeatherIcon, {\n    src: iconUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, temp, \"\\xB0\"));\n};\n\nForecastHour.propTypes = {\n  temp: PropTypes.number.isRequired,\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired\n};\nexport default ForecastHour;","map":{"version":3,"sources":["/Users/sophiesun/Desktop/weather-app-react-master/src/components/ForecastHour.js"],"names":["React","styled","PropTypes","SmallLabel","Text","device","ForecastWrapper","div","tablet","laptop","laptopL","WeatherIcon","img","ForecastHour","props","temp","month","day","hour","icon","iconUrl","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;;;;;WAaxBF,MAAM,CAACG,MAAO;;;WAGdH,MAAM,CAACI,MAAO;;;WAGdJ,MAAM,CAACK,OAAQ;;;CAnB1B;AAwBA,MAAMC,WAAW,GAAGV,MAAM,CAACW,GAAI;;;;;CAA/B;;AAOA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,QACpBC,IADoB,GACaD,KADb,CACpBC,IADoB;AAAA,QACdC,KADc,GACaF,KADb,CACdE,KADc;AAAA,QACPC,GADO,GACaH,KADb,CACPG,GADO;AAAA,QACFC,IADE,GACaJ,KADb,CACFI,IADE;AAAA,QACIC,IADJ,GACaL,KADb,CACIK,IADJ;AAE5B,QAAMC,OAAO,GAAI,oCAAmCD,IAAK,MAAzD;AAEA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,OACWC,GADX,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBC,IAAtB,QAJF,EAKE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IADH,SANF,CADF;AAYD,CAhBD;;AAkBAF,YAAY,CAACQ,SAAb,GAAyB;AACvBN,EAAAA,IAAI,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UADA;AAEvBP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,MAAV,CAAiBD,UAFD;AAGvBN,EAAAA,GAAG,EAAEf,SAAS,CAACsB,MAAV,CAAiBD,UAHC;AAIvBL,EAAAA,IAAI,EAAEhB,SAAS,CAACoB,MAAV,CAAiBC,UAJA;AAKvBJ,EAAAA,IAAI,EAAEjB,SAAS,CAACsB,MAAV,CAAiBD;AALA,CAAzB;AAQA,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nimport device from '../responsive/Device';\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\n\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nconst ForecastHour = props => {\n  const { temp, month, day, hour, icon } = props;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n\n  return (\n    <ForecastWrapper>\n      <Text align=\"center\">\n        {month}.{day}\n      </Text>\n      <Text align=\"center\">{hour}:00</Text>\n      <WeatherIcon src={iconUrl} />\n      <SmallLabel align=\"center\" weight=\"400\">\n        {temp}&#176;\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nForecastHour.propTypes = {\n  temp: PropTypes.number.isRequired,\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default ForecastHour;\n"]},"metadata":{},"sourceType":"module"}