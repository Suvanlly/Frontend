{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/weather-app-react-master/src/components/Result.js\";\nimport React from 'react';\nimport './Result.sass';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloud, faBolt, faCloudRain, faCloudShowersHeavy, faSnowflake, faSun, faSmog } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport ForecastHour from './ForecastHour';\nimport ResultFadeIn from './ResultFadeIn';\nimport BigLabel from './BigLabel';\nimport MediumLabel from './MediumLabel';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n`;\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  margin: 20px 0;\n  grid-gap: 30px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\nconst TemperatureWrapper = styled.div``;\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 50px;\n  font-weight: 400;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 70px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n  margin: 20px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({\n  weather\n}) => {\n  const city = weather.city,\n        country = weather.country,\n        date = weather.date,\n        description = weather.description,\n        main = weather.main,\n        temp = weather.temp,\n        sunset = weather.sunset,\n        sunrise = weather.sunrise,\n        humidity = weather.humidity,\n        wind = weather.wind,\n        highestTemp = weather.highestTemp,\n        lowestTemp = weather.lowestTemp,\n        forecast = weather.forecast;\n  const forecasts = forecast.map(item => React.createElement(ForecastHour, {\n    key: item.dt,\n    temp: Math.floor(item.main.temp * 1) / 1,\n    icon: item.weather[0].icon,\n    month: item.dt_txt.slice(5, 7),\n    day: item.dt_txt.slice(8, 10),\n    hour: item.dt_txt.slice(11, 13) * 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }));\n  let weatherIcon = null;\n\n  if (main === 'Thunderstorm') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faBolt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    });\n  } else if (main === 'Drizzle') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faCloudRain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    });\n  } else if (main === 'Rain') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faCloudShowersHeavy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    });\n  } else if (main === 'Snow') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faSnowflake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    });\n  } else if (main === 'Clear') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faSun,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    });\n  } else if (main === 'Clouds') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faCloud,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    });\n  } else {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faSmog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Results, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(LocationWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(BigLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, city, \", \", country), React.createElement(SmallLabel, {\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, date)), React.createElement(CurrentWeatherWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(WeatherIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, weatherIcon), React.createElement(TemperatureWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Temperature, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, Math.floor(temp), \"\\xB0\"), React.createElement(SmallLabel, {\n    weight: \"400\",\n    firstToUpperCase: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, description))), React.createElement(WeatherDetailsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, Math.floor(highestTemp), \"\\xB0\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Hight\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, wind, \"mph\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Wind\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, sunrise), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Sunrise\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, Math.floor(lowestTemp), \"\\xB0\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Low\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, humidity, \"%\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Rain\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, sunset), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Sunset\"))), React.createElement(ForecastWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(MediumLabel, {\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Forecast\"), React.createElement(Forecast, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, forecasts)));\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    forecast: PropTypes.array\n  }).isRequired\n};\nexport default Result;","map":{"version":3,"sources":["/Users/sophiesun/Desktop/weather-app-react-master/src/components/Result.js"],"names":["React","PropTypes","FontAwesomeIcon","faCloud","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faSmog","styled","device","ForecastHour","ResultFadeIn","BigLabel","MediumLabel","SmallLabel","Text","Results","div","LocationWrapper","CurrentWeatherWrapper","mobileL","tablet","WeatherIcon","laptop","laptopL","TemperatureWrapper","Temperature","h3","WeatherDetailsWrapper","WeatherDetail","ForecastWrapper","Forecast","Result","weather","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","forecast","forecasts","map","item","dt","Math","floor","icon","dt_txt","slice","weatherIcon","propTypes","shape","string","number","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,OADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,mBAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,MAPF,QAQO,mCARP;AASA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAI;;;;;;;;;eASZN,YAAa;CAT5B;AAYA,MAAMO,eAAe,GAAGV,MAAM,CAACS,GAAI;;CAAnC;AAIA,MAAME,qBAAqB,GAAGX,MAAM,CAACS,GAAI;;;;;;;;WAQ9BR,MAAM,CAACW,OAAQ;;;;WAIfX,MAAM,CAACY,MAAO;;;;CAZzB;AAkBA,MAAMC,WAAW,GAAGd,MAAM,CAACS,GAAI;;;;;;WAMpBR,MAAM,CAACY,MAAO;;;;WAIdZ,MAAM,CAACc,MAAO;;;WAGdd,MAAM,CAACe,OAAQ;;;CAb1B;AAkBA,MAAMC,kBAAkB,GAAGjB,MAAM,CAACS,GAAI,EAAtC;AAEA,MAAMS,WAAW,GAAGlB,MAAM,CAACmB,EAAG;;;;;WAKnBlB,MAAM,CAACY,MAAO;;;WAGdZ,MAAM,CAACc,MAAO;;;WAGdd,MAAM,CAACe,OAAQ;;;CAX1B;AAgBA,MAAMI,qBAAqB,GAAGpB,MAAM,CAACS,GAAI;;;;;;;;;WAS9BR,MAAM,CAACW,OAAQ;;;CAT1B;AAcA,MAAMS,aAAa,GAAGrB,MAAM,CAACS,GAAI;;;WAGtBR,MAAM,CAACc,MAAO;;;CAHzB;AAQA,MAAMO,eAAe,GAAGtB,MAAM,CAACS,GAAI;;;;CAAnC;AAMA,MAAMc,QAAQ,GAAGvB,MAAM,CAACS,GAAI;;;;;;;;;WASjBR,MAAM,CAACc,MAAO;;;CATzB;;AAcA,MAAMS,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,QAE5BC,IAF4B,GAe1BD,OAf0B,CAE5BC,IAF4B;AAAA,QAG5BC,OAH4B,GAe1BF,OAf0B,CAG5BE,OAH4B;AAAA,QAI5BC,IAJ4B,GAe1BH,OAf0B,CAI5BG,IAJ4B;AAAA,QAK5BC,WAL4B,GAe1BJ,OAf0B,CAK5BI,WAL4B;AAAA,QAM5BC,IAN4B,GAe1BL,OAf0B,CAM5BK,IAN4B;AAAA,QAO5BC,IAP4B,GAe1BN,OAf0B,CAO5BM,IAP4B;AAAA,QAQ5BC,MAR4B,GAe1BP,OAf0B,CAQ5BO,MAR4B;AAAA,QAS5BC,OAT4B,GAe1BR,OAf0B,CAS5BQ,OAT4B;AAAA,QAU5BC,QAV4B,GAe1BT,OAf0B,CAU5BS,QAV4B;AAAA,QAW5BC,IAX4B,GAe1BV,OAf0B,CAW5BU,IAX4B;AAAA,QAY5BC,WAZ4B,GAe1BX,OAf0B,CAY5BW,WAZ4B;AAAA,QAa5BC,UAb4B,GAe1BZ,OAf0B,CAa5BY,UAb4B;AAAA,QAc5BC,QAd4B,GAe1Bb,OAf0B,CAc5Ba,QAd4B;AAiB9B,QAAMC,SAAS,GAAGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAEjC,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACX,IAAL,CAAUC,IAAV,GAAiB,CAA5B,IAAiC,CAFzC;AAGE,IAAA,IAAI,EAAEU,IAAI,CAAChB,OAAL,CAAa,CAAb,EAAgBoB,IAHxB;AAIE,IAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAJT;AAKE,IAAA,GAAG,EAAEN,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CALP;AAME,IAAA,IAAI,EAAEN,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkB,EAAlB,EAAsB,EAAtB,IAA4B,CANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFgB,CAAlB;AAYA,MAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAIlB,IAAI,KAAK,cAAb,EAA6B;AAC3BkB,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEtD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFD,MAEO,IAAIoC,IAAI,KAAK,SAAb,EAAwB;AAC7BkB,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAErD,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFM,MAEA,IAAImC,IAAI,KAAK,MAAb,EAAqB;AAC1BkB,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEpD,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFM,MAEA,IAAIkC,IAAI,KAAK,MAAb,EAAqB;AAC1BkB,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnD,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFM,MAEA,IAAIiC,IAAI,KAAK,OAAb,EAAsB;AAC3BkB,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAElD,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFM,MAEA,IAAIgC,IAAI,KAAK,QAAb,EAAuB;AAC5BkB,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEvD,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFM,MAEA;AACLuD,IAAAA,WAAW,GAAG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEjD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD;;AAED,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG2B,IADH,QACWC,OADX,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,IAA1B,CAJF,CADF,EAQE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcoB,WAAd,CADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcL,IAAI,CAACC,KAAL,CAAWb,IAAX,CAAd,SADF,EAEE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,KAAnB;AAAyB,IAAA,gBAAgB,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WADH,CAFF,CAFF,CARF,EAkBE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,IAAI,CAACC,KAAL,CAAWR,WAAX,CADH,SADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IADH,QADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAPF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OADH,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAbF,EAmBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,IAAI,CAACC,KAAL,CAAWP,UAAX,CADH,SADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAnBF,EAyBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,MADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAzBF,EA+BE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MADH,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CA/BF,CAlBF,EAyDE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWO,SAAX,CAFF,CAzDF,CADF;AAgED,CA/GD;;AAiHAf,MAAM,CAACyB,SAAP,GAAmB;AACjBxB,EAAAA,OAAO,EAAElC,SAAS,CAAC2D,KAAV,CAAgB;AACvBxB,IAAAA,IAAI,EAAEnC,SAAS,CAAC4D,MADO;AAEvBxB,IAAAA,OAAO,EAAEpC,SAAS,CAAC4D,MAFI;AAGvBvB,IAAAA,IAAI,EAAErC,SAAS,CAAC4D,MAHO;AAIvBtB,IAAAA,WAAW,EAAEtC,SAAS,CAAC4D,MAJA;AAKvBrB,IAAAA,IAAI,EAAEvC,SAAS,CAAC4D,MALO;AAMvBpB,IAAAA,IAAI,EAAExC,SAAS,CAAC6D,MANO;AAOvBnB,IAAAA,OAAO,EAAE1C,SAAS,CAAC4D,MAPI;AAQvBnB,IAAAA,MAAM,EAAEzC,SAAS,CAAC4D,MARK;AASvBjB,IAAAA,QAAQ,EAAE3C,SAAS,CAAC6D,MATG;AAUvBjB,IAAAA,IAAI,EAAE5C,SAAS,CAAC6D,MAVO;AAWvBhB,IAAAA,WAAW,EAAE7C,SAAS,CAAC6D,MAXA;AAYvBf,IAAAA,UAAU,EAAE9C,SAAS,CAAC6D,MAZC;AAavBd,IAAAA,QAAQ,EAAE/C,SAAS,CAAC8D;AAbG,GAAhB,EAcNC;AAfc,CAAnB;AAkBA,eAAe9B,MAAf","sourcesContent":["import React from 'react';\nimport './Result.sass';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport ForecastHour from './ForecastHour';\nimport ResultFadeIn from './ResultFadeIn';\nimport BigLabel from './BigLabel';\nimport MediumLabel from './MediumLabel';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n`;\n\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  margin: 20px 0;\n  grid-gap: 30px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\n\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\n\nconst TemperatureWrapper = styled.div``;\n\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 50px;\n  font-weight: 400;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 70px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\n\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n  margin: 20px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\n\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const {\n    city,\n    country,\n    date,\n    description,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    wind,\n    highestTemp,\n    lowestTemp,\n    forecast,\n  } = weather;\n\n  const forecasts = forecast.map(item => (\n\n    <ForecastHour\n      key={item.dt}\n      temp={Math.floor(item.main.temp * 1) / 1}\n      icon={item.weather[0].icon}\n      month={item.dt_txt.slice(5, 7)}\n      day={item.dt_txt.slice(8, 10)}\n      hour={item.dt_txt.slice(11, 13) * 1}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  if (main === 'Thunderstorm') {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === 'Drizzle') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === 'Rain') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === 'Snow') {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === 'Clear') {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === 'Clouds') {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      <LocationWrapper>\n        <BigLabel>\n          {city}, {country}\n        </BigLabel>\n        <SmallLabel weight=\"400\">{date}</SmallLabel>\n      </LocationWrapper>\n\n      <CurrentWeatherWrapper>\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\n        <TemperatureWrapper>\n          <Temperature>{Math.floor(temp)}&#176;</Temperature>\n          <SmallLabel weight=\"400\" firstToUpperCase>\n            {description}\n          </SmallLabel>\n        </TemperatureWrapper>\n      </CurrentWeatherWrapper>\n\n      <WeatherDetailsWrapper>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.floor(highestTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Hight</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {wind}mph\n          </SmallLabel>\n          <Text align=\"center\">Wind</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {sunrise}\n          </SmallLabel>\n          <Text align=\"center\">Sunrise</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.floor(lowestTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Low</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {humidity}%\n          </SmallLabel>\n          <Text align=\"center\">Rain</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {sunset}\n          </SmallLabel>\n          <Text align=\"center\">Sunset</Text>\n        </WeatherDetail>\n      </WeatherDetailsWrapper>\n\n      <ForecastWrapper>\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}