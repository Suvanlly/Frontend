{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Frontend/React/iMOOC/react-redux/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //connect是react-redux提供的核心API之一\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  /* constructor(props) {\n       super(props);\n       this.state = store.getState();\n    } */\n  render() {\n    // console.log(this.props.list)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.props.inputValue,\n          onChange: this.props.changeInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.handleClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.list.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: index => this.props.handleDelete(index),\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.inputValue,\n    list: state.list\n  };\n}; // store.dispatch, props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeInputValue(e) {\n      const action = {\n        type: 'change_input_value',\n        value: e.target.value\n      };\n      dispatch(action);\n    },\n\n    handleClick() {\n      const action = {\n        type: 'add_item'\n      };\n      dispatch(action);\n    },\n\n    handleDelete(index) {\n      const action = {\n        type: 'delete_item',\n        index\n      };\n      console.log(index);\n      dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n/* connect方法的意思是 让TodoList组件和store连接, 并且将store里数据的inputValue\n映射到组件的props的inputValue里面，这样在17行就变成了value={this.props.inputValue}\n而不是value={this.state.inputValue}\n*/","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/iMOOC/react-redux/src/TodoList.js"],"names":["React","Component","connect","TodoList","render","props","inputValue","changeInputValue","handleClick","list","map","item","index","handleDelete","mapStateToProps","state","mapDispatchToProps","dispatch","e","action","type","value","target","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;;;AAEvC,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAGjC;AACA;AACA;AACA;AAEEG,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UADpB;AAEE,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE;AAFvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBAEI,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,8BAAO;AAAI,YAAA,OAAO,EAAGA,KAAD,IAAW,KAAKP,KAAL,CAAWQ,YAAX,CAAwBD,KAAxB,CAAxB;AAAA,sBAAqED;AAArE,aAA6DC,KAA7D;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA9B8B;;AAiCjC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,UAAU,EAAES,KAAK,CAACT,UADb;AAELG,IAAAA,IAAI,EAAEM,KAAK,CAACN;AAFP,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLV,IAAAA,gBAAgB,CAACW,CAAD,EAAI;AAClB,YAAMC,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,oBADO;AAEbC,QAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD;AAFH,OAAf;AAIAJ,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,KAPI;;AASLX,IAAAA,WAAW,GAAG;AACZ,YAAMW,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE;AADO,OAAf;AAGAH,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,KAdI;;AAgBLN,IAAAA,YAAY,CAACD,KAAD,EAAQ;AAClB,YAAMO,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,aADO;AAEbR,QAAAA;AAFa,OAAf;AAIAW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAK,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACD;;AAvBI,GAAP;AAyBD,CA1BD;;AA4BA,eAAejB,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'; //connect是react-redux提供的核心API之一\n\nclass TodoList extends Component {\n\n\n/* constructor(props) {\n     super(props);\n     this.state = store.getState();\n  } */\n\n  render() { \n    // console.log(this.props.list)\n    return (\n      <div>\n        <div>\n          <input \n            value={this.props.inputValue}\n            onChange={this.props.changeInputValue}\n          />\n          <button onClick={this.props.handleClick}>\n            Submit\n          </button>\n        </div>\n        <ul>\n          {\n            this.props.list.map((item, index) => {\n              return <li onClick={(index) => this.props.handleDelete(index)} key={index}>{item}</li>\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    inputValue: state.inputValue,\n    list: state.list\n  }\n}\n\n// store.dispatch, props\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInputValue(e) {\n      const action = {\n        type: 'change_input_value',\n        value: e.target.value\n      }\n      dispatch(action);\n    },\n\n    handleClick() {\n      const action = {\n        type: 'add_item'\n      }\n      dispatch(action);\n    },\n\n    handleDelete(index) {\n      const action = {\n        type: 'delete_item',\n        index\n      }\n      console.log(index)\n      dispatch(action);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n/* connect方法的意思是 让TodoList组件和store连接, 并且将store里数据的inputValue\n映射到组件的props的inputValue里面，这样在17行就变成了value={this.props.inputValue}\n而不是value={this.state.inputValue}\n*/"]},"metadata":{},"sourceType":"module"}