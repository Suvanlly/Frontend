{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Frontend/React/iMOOC/react-redux/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //connect是react-redux提供的核心API之一\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  /* constructor(props) {\n       super(props);\n       this.state = store.getState();\n    } */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.props.inputValue,\n          onChange: this.props.changeInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.handleClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Dell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.inputValue\n  };\n}; // store.dispatch, props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeInputValue(e) {\n      const action = {\n        type: 'change_input_value',\n        value: e.target.value\n      };\n      dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n/* connect方法的意思是 让TodoList组件和store连接, 并且将store里数据的inputValue\n映射到组件的props的inputValue里面，这样在17行就变成了value={this.props.inputValue}\n而不是value={this.state.inputValue}\n*/","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/iMOOC/react-redux/src/TodoList.js"],"names":["React","Component","connect","TodoList","render","props","inputValue","changeInputValue","handleClick","mapStateToProps","state","mapDispatchToProps","dispatch","e","action","type","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;;;AAEvC,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAGjC;AACA;AACA;AACA;AAEEG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UADpB;AAEE,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE;AAFvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAzB8B;;AA4BjC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,UAAU,EAAEI,KAAK,CAACJ;AADb,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLL,IAAAA,gBAAgB,CAACM,CAAD,EAAI;AAClB,YAAMC,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,oBADO;AAEbC,QAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD;AAFH,OAAf;AAIAJ,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACD;;AAPI,GAAP;AASD,CAVD;;AAYA,eAAeZ,OAAO,CAACO,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'; //connect是react-redux提供的核心API之一\n\nclass TodoList extends Component {\n\n\n/* constructor(props) {\n     super(props);\n     this.state = store.getState();\n  } */\n\n  render() { \n    return (\n      <div>\n        <div>\n          <input \n            value={this.props.inputValue}\n            onChange={this.props.changeInputValue}\n          />\n          <button onClick={this.props.handleClick}>\n            Submit\n          </button>\n        </div>\n        <ul>\n          <li>Dell</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    inputValue: state.inputValue\n  }\n}\n\n// store.dispatch, props\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInputValue(e) {\n      const action = {\n        type: 'change_input_value',\n        value: e.target.value\n      }\n      dispatch(action);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n/* connect方法的意思是 让TodoList组件和store连接, 并且将store里数据的inputValue\n映射到组件的props的inputValue里面，这样在17行就变成了value={this.props.inputValue}\n而不是value={this.state.inputValue}\n*/"]},"metadata":{},"sourceType":"module"}