{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Frontend/React/iMOOC/redux/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport store from './store';\nimport { getAddItemAction, getDeleteItemAction, getInputChangeAction } from './store/actionCreators';\nimport TodoListUI from './TodoListUI';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  // 调用store里面的数据\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleStoreChange = this.handleStoreChange.bind(this);\n    this.handleBtnClick = this.handleBtnClick.bind(this);\n    this.handleItemDelete = this.handleItemDelete.bind(this); // 让组件订阅store的数据，只要store的数据发生变化，subscribe里面的函数就自动被执行\n\n    store.subscribe(this.handleStoreChange); // console.log(store.getState())\n  }\n\n  componentDidMount() {\n    axios.get('https://www.fastmock.site/mock/ef583257e8a4a1667c21df6b42c8769f/getList/list').then(res => {\n      const data = res.data;\n      console.log(res);\n    });\n  }\n\n  handleInputChange(e) {\n    // 创建action，value就是改变成e.target.value\n    const action = getInputChangeAction(e.target.value);\n    store.dispatch(action); // 把这个action传给store\n    // 打印出input改变的值\n    // console.log(e.target.value);\n  }\n\n  handleBtnClick() {\n    const action = getAddItemAction();\n    store.dispatch(action);\n  }\n\n  handleItemDelete(index) {\n    const action = getDeleteItemAction(index);\n    store.dispatch(action);\n  }\n\n  handleStoreChange() {\n    // 当感知到store数据变化时，用getStore方法重新调取store里面的数据，\n    // 用setState替换掉当前的store里面的数据，这样组件的数据就和store里面同步\n    this.setState(store.getState());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TodoListUI, {\n      inputValue: this.state.inputValue,\n      list: this.state.list,\n      handleInputChange: this.handleInputChange,\n      handleBtnClick: this.handleBtnClick,\n      handleItemDelete: this.handleItemDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/iMOOC/redux/src/TodoList.js"],"names":["React","Component","store","getAddItemAction","getDeleteItemAction","getInputChangeAction","TodoListUI","axios","TodoList","constructor","props","state","getState","handleInputChange","bind","handleStoreChange","handleBtnClick","handleItemDelete","subscribe","componentDidMount","get","then","res","data","console","log","e","action","target","value","dispatch","index","setState","render","inputValue","list"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,oBAAhD,QAA4E,wBAA5E;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAE/B;AACAQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaT,KAAK,CAACU,QAAN,EAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB,CANiB,CAOjB;;AACAZ,IAAAA,KAAK,CAACgB,SAAN,CAAgB,KAAKH,iBAArB,EARiB,CASjB;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,8EAAV,EACCC,IADD,CACOC,GAAD,IAAS;AACX,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KAJD;AAKD;;AAEDT,EAAAA,iBAAiB,CAACa,CAAD,EAAI;AACnB;AACA,UAAMC,MAAM,GAAGtB,oBAAoB,CAACqB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnC;AACA3B,IAAAA,KAAK,CAAC4B,QAAN,CAAeH,MAAf,EAHmB,CAGK;AACxB;AACA;AACD;;AAEDX,EAAAA,cAAc,GAAG;AACf,UAAMW,MAAM,GAAGxB,gBAAgB,EAA/B;AACAD,IAAAA,KAAK,CAAC4B,QAAN,CAAeH,MAAf;AACD;;AAEDV,EAAAA,gBAAgB,CAACc,KAAD,EAAQ;AACtB,UAAMJ,MAAM,GAAGvB,mBAAmB,CAAC2B,KAAD,CAAlC;AACA7B,IAAAA,KAAK,CAAC4B,QAAN,CAAeH,MAAf;AACD;;AAEDZ,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,SAAKiB,QAAL,CAAc9B,KAAK,CAACU,QAAN,EAAd;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWuB,UADzB;AAEE,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWwB,IAFnB;AAGE,MAAA,iBAAiB,EAAE,KAAKtB,iBAH1B;AAIE,MAAA,cAAc,EAAE,KAAKG,cAJvB;AAKE,MAAA,gBAAgB,EAAE,KAAKC;AALzB;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAzD8B;;AA4DjC,eAAeT,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport store from './store';\nimport { getAddItemAction, getDeleteItemAction, getInputChangeAction } from './store/actionCreators'\nimport TodoListUI from './TodoListUI';\nimport axios from 'axios';\n\nclass TodoList extends Component {\n\n  // 调用store里面的数据\n  constructor(props) {\n    super(props);\n    this.state = store.getState()\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleStoreChange = this.handleStoreChange.bind(this)\n    this.handleBtnClick = this.handleBtnClick.bind(this)\n    this.handleItemDelete = this.handleItemDelete.bind(this)\n    // 让组件订阅store的数据，只要store的数据发生变化，subscribe里面的函数就自动被执行\n    store.subscribe(this.handleStoreChange)\n    // console.log(store.getState())\n  }\n\n  componentDidMount() {\n    axios.get('https://www.fastmock.site/mock/ef583257e8a4a1667c21df6b42c8769f/getList/list')\n    .then((res) => {\n        const data = res.data;\n        console.log(res)\n    })\n  }\n\n  handleInputChange(e) {\n    // 创建action，value就是改变成e.target.value\n    const action = getInputChangeAction(e.target.value)\n    store.dispatch(action); // 把这个action传给store\n    // 打印出input改变的值\n    // console.log(e.target.value);\n  }\n\n  handleBtnClick() {\n    const action = getAddItemAction()\n    store.dispatch(action);\n  }\n\n  handleItemDelete(index) {\n    const action = getDeleteItemAction(index);\n    store.dispatch(action);\n  }\n\n  handleStoreChange() {\n    // 当感知到store数据变化时，用getStore方法重新调取store里面的数据，\n    // 用setState替换掉当前的store里面的数据，这样组件的数据就和store里面同步\n    this.setState(store.getState());\n  }\n\n  render() {\n    return (\n      <TodoListUI\n        inputValue={this.state.inputValue}\n        list={this.state.list}\n        handleInputChange={this.handleInputChange}\n        handleBtnClick={this.handleBtnClick}\n        handleItemDelete={this.handleItemDelete}\n      />\n    )\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}