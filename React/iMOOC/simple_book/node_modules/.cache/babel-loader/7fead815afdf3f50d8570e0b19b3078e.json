{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nimport { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes'; // immutable这个库可以把一个JS对象转化成immutable对象\n\nconst defaultState = fromJS({\n  topicList: [],\n  articleList: [],\n  recommendList: [],\n  writerList: []\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_HOME_DATA:\n      return state.merge({\n        topicList: fromJS(action.topicList),\n        articleList: fromJS(action.articleList),\n        recommendList: fromJS(action.recommendList),\n        writerList: fromJS(action.writerList)\n      });\n\n    case actionTypes.ADD_HOME_LIST:\n      return state.set('articleList', state.get('articleList').concat(action.list));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/iMOOC/simple_book/src/pages/home/store/reducer.js"],"names":["fromJS","actionTypes","defaultState","topicList","articleList","recommendList","writerList","state","action","type","CHANGE_HOME_DATA","merge","ADD_HOME_LIST","set","get","concat","list"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAGF,MAAM,CAAC;AAC1BG,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,WAAW,EAAE,EAFa;AAG1BC,EAAAA,aAAa,EAAE,EAHW;AAI1BC,EAAAA,UAAU,EAAE;AAJc,CAAD,CAA3B;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,WAAW,CAACS,gBAAjB;AACE,aAAOH,KAAK,CAACI,KAAN,CAAY;AACjBR,QAAAA,SAAS,EAAEH,MAAM,CAACQ,MAAM,CAACL,SAAR,CADA;AAEjBC,QAAAA,WAAW,EAAEJ,MAAM,CAACQ,MAAM,CAACJ,WAAR,CAFF;AAGjBC,QAAAA,aAAa,EAAEL,MAAM,CAACQ,MAAM,CAACH,aAAR,CAHJ;AAIjBC,QAAAA,UAAU,EAAEN,MAAM,CAACQ,MAAM,CAACF,UAAR;AAJD,OAAZ,CAAP;;AAMF,SAAKL,WAAW,CAACW,aAAjB;AACE,aAAOL,KAAK,CAACM,GAAN,CAAU,aAAV,EAAyBN,KAAK,CAACO,GAAN,CAAU,aAAV,EAAyBC,MAAzB,CAAgCP,MAAM,CAACQ,IAAvC,CAAzB,CAAP;;AACF;AACE,aAAOT,KAAP;AAXJ;AAaD,CAdD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\n\n// immutable这个库可以把一个JS对象转化成immutable对象\nconst defaultState = fromJS({\n  topicList: [],\n  articleList: [],\n  recommendList: [],\n  writerList: []\n});\n\nexport default (state = defaultState, action) => {\n  switch(action.type) {\n    case actionTypes.CHANGE_HOME_DATA:\n      return state.merge({\n        topicList: fromJS(action.topicList),\n        articleList: fromJS(action.articleList),\n        recommendList: fromJS(action.recommendList),\n        writerList: fromJS(action.writerList)\n      })\n    case actionTypes.ADD_HOME_LIST:\n      return state.set('articleList', state.get('articleList').concat(action.list))\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}