{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nconst defaultState = {\n  inputValue: '',\n  list: []\n}; // Reducer相当于一个笔记本，state可以理解为整个store仓库里存储的数据（或者理解为之前的数据），action是当前要做的事\n// reducer可以接受state，但是绝不能修改state\n\nexport default ((state = defaultState, action) => {\n  if (action.type === 'change_input_value') {\n    // 拷贝原来的store的数据，并且把里面的input value改成新的值，就完成了公用数据store里值的修改\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.inputValue = action.value;\n    return newState;\n  }\n\n  if (action.type === 'add_todo_item') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);\n    newState.inputValue = '';\n    return newState; // console.log(newState)\n  }\n\n  if (action.type === 'delete_todo_item') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);\n    newState.inputValue = '';\n    return newState; // console.log(newState)\n  } // console.log(state, action);\n\n\n  return state;\n});","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/iMOOC/redux/src/store/reducer.js"],"names":["defaultState","inputValue","list","state","action","type","newState","JSON","parse","stringify","value","push"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB,C,CAIA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE/C,MAAIA,MAAM,CAACC,IAAP,KAAgB,oBAApB,EAA0C;AACxC;AACA,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;AACAG,IAAAA,QAAQ,CAACL,UAAT,GAAsBG,MAAM,CAACM,KAA7B;AACA,WAAOJ,QAAP;AACD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;AACAG,IAAAA,QAAQ,CAACJ,IAAT,CAAcS,IAAd,CAAmBL,QAAQ,CAACL,UAA5B;AACAK,IAAAA,QAAQ,CAACL,UAAT,GAAsB,EAAtB;AACA,WAAOK,QAAP,CAJmC,CAKnC;AACD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;AACtC,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;AACAG,IAAAA,QAAQ,CAACJ,IAAT,CAAcS,IAAd,CAAmBL,QAAQ,CAACL,UAA5B;AACAK,IAAAA,QAAQ,CAACL,UAAT,GAAsB,EAAtB;AACA,WAAOK,QAAP,CAJsC,CAKtC;AACD,GAvB8C,CAwB/C;;;AACA,SAAOH,KAAP;AACD,CA1BD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nconst defaultState = {\n  inputValue: '',\n  list: []\n}\n// Reducer相当于一个笔记本，state可以理解为整个store仓库里存储的数据（或者理解为之前的数据），action是当前要做的事\n// reducer可以接受state，但是绝不能修改state\nexport default (state = defaultState, action) => {\n\n  if (action.type === 'change_input_value') {\n    // 拷贝原来的store的数据，并且把里面的input value改成新的值，就完成了公用数据store里值的修改\n    const newState = JSON.parse(JSON.stringify(state)); \n    newState.inputValue = action.value;\n    return newState;\n  }\n\n  if (action.type === 'add_todo_item') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);\n    newState.inputValue = '';\n    return newState;\n    // console.log(newState)\n  }\n\n  if (action.type === 'delete_todo_item') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);\n    newState.inputValue = '';\n    return newState;\n    // console.log(newState)\n  }\n  // console.log(state, action);\n  return state;\n}"]},"metadata":{},"sourceType":"module"}