{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/ReactDemo/demo01_practice/src/Jiejie.js\";\nimport React, { Component, Fragment } from 'react';\nimport JiejieItem from './JiejieItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jiejie extends Component {\n  //生命周期：在某一时刻可以自动执行的函数\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      list: ['Head Massage', 'Foot Massage']\n    };\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount-----组件将要挂载到页面的时候');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount-----组件挂载完成的时刻');\n  }\n\n  shouldComponentUpdate() {\n    console.log('shouldComponentUpdate----在组件更新前执行');\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate-----在shouldComponentUpdate之后执行');\n  }\n\n  render() {\n    console.log('render-----组件挂载中');\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.inputValue,\n          onChange: this.inputChange.bind(this),\n          ref: input => {\n            this.input = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addList.bind(this),\n          children: \" Add Service \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.list.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(JiejieItem, {\n              content: item,\n              index: index,\n              deleteItem: this.deleteItem.bind(this)\n            }, index + item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  inputChange() {\n    this.setState({\n      inputValue: this.input.value\n    });\n  }\n\n  addList() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue]\n    });\n  }\n\n  deleteItem(index) {\n    let newList = this.state.list;\n    newList.splice(index, 1);\n    this.setState({\n      list: newList\n    });\n  }\n\n}\n\nexport default Jiejie;","map":{"version":3,"sources":["/Users/sophiesun/Desktop/ReactDemo/demo01_practice/src/Jiejie.js"],"names":["React","Component","Fragment","JiejieItem","Jiejie","constructor","props","state","inputValue","list","componentWillMount","console","log","componentDidMount","shouldComponentUpdate","componentWillUpdate","render","inputChange","bind","input","addList","map","item","index","deleteItem","setState","value","newList","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC7B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,IAAI,EAAC,CAAC,cAAD,EAAgB,cAAhB;AAFI,KAAX;AAID;;AAEDC,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;;AACDE,EAAAA,qBAAqB,GAAE;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,WAAO,IAAP;AACD;;AACDG,EAAAA,mBAAmB,GAAE;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,wBAEE,QAAC,QAAD;AAAA,8BACE;AAAA,gCACI;AACI,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,UADtB;AAEI,UAAA,QAAQ,EAAE,KAAKS,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAFd;AAGI,UAAA,GAAG,EAAKC,KAAD,IAAS;AAAC,iBAAKA,KAAL,GAAWA,KAAX;AAAiB;AAHtC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAQ,UAAA,OAAO,EAAE,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAEM,KAAKX,KAAL,CAAWE,IAAX,CAAgBY,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAChC,8BACM;AAAA,mCACI,QAAC,UAAD;AAEE,cAAA,OAAO,EAAED,IAFX;AAGE,cAAA,KAAK,EAAEC,KAHT;AAIE,cAAA,UAAU,EAAE,KAAKC,UAAL,CAAgBN,IAAhB,CAAqB,IAArB;AAJd,eACOK,KAAK,GAACD,IADb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADN;AAUD,SAXD;AAFN;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AA6BF;;AAEAL,EAAAA,WAAW,GAAE;AACZ,SAAKQ,QAAL,CAAc;AACZjB,MAAAA,UAAU,EAAE,KAAKW,KAAL,CAAWO;AADX,KAAd;AAGA;;AACDN,EAAAA,OAAO,GAAE;AACP,SAAKK,QAAL,CAAc;AACZhB,MAAAA,IAAI,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqB,KAAKF,KAAL,CAAWC,UAAhC;AADO,KAAd;AAGD;;AAEDgB,EAAAA,UAAU,CAACD,KAAD,EAAO;AACf,QAAII,OAAO,GAAG,KAAKpB,KAAL,CAAWE,IAAzB;AACAkB,IAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAqB,CAArB;AACA,SAAKE,QAAL,CAAc;AACZhB,MAAAA,IAAI,EAACkB;AADO,KAAd;AAGD;;AA1E4B;;AA6E/B,eAAevB,MAAf","sourcesContent":["import React, { Component,Fragment } from 'react';\nimport JiejieItem from './JiejieItem'\n\nclass Jiejie extends Component {\n  //生命周期：在某一时刻可以自动执行的函数\n  constructor(props){\n    super(props)\n    this.state={\n      inputValue:'',\n      list:['Head Massage','Foot Massage']\n    }\n  }\n\n  componentWillMount(){\n    console.log('componentWillMount-----组件将要挂载到页面的时候');\n  }\n  componentDidMount(){\n    console.log('componentDidMount-----组件挂载完成的时刻');\n  }\n  shouldComponentUpdate(){\n    console.log('shouldComponentUpdate----在组件更新前执行');\n    return true;\n  }\n  componentWillUpdate(){\n    console.log('componentWillUpdate-----在shouldComponentUpdate之后执行');\n  }\n\n  render (){\n    console.log('render-----组件挂载中');\n    return (\n\n      <Fragment>\n        <div>\n            <input \n                value={this.state.inputValue} \n                onChange={this.inputChange.bind(this)}\n                ref = {(input)=>{this.input=input}}\n            />\n            <button onClick={this.addList.bind(this)}> Add Service </button>\n        </div>\n        <ul>\n            {\n              this.state.list.map((item,index)=>{\n                return (\n                      <div>\n                          <JiejieItem\n                            key={index+item} \n                            content={item}\n                            index={index}\n                            deleteItem={this.deleteItem.bind(this)}\n                          />\n                      </div>\n                )\n              }) \n            }  \n        </ul>\n      </Fragment>\n    )\n }\n\n  inputChange(){\n   this.setState({\n     inputValue: this.input.value\n   })\n  }\n  addList(){\n    this.setState({\n      list:[...this.state.list, this.state.inputValue]\n    })\n  }\n  \n  deleteItem(index){\n    let newList = this.state.list\n    newList.splice(index,1)\n    this.setState({\n      list:newList\n    })\n  }\n}\n\nexport default Jiejie"]},"metadata":{},"sourceType":"module"}