{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/ReactDemo/demo01_practice/src/Jiejie.js\";\nimport React, { Component, Fragment } from \"react\";\nimport JiejieItem from \"./JiejieItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jiejie extends Component {\n  //生命周期：在某一时刻可以自动执行的函数\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      list: [\"Head Massage\", \"Foot Massage\"]\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount-----组件将要挂载到页面的时候\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件挂载完成的时刻\");\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"1-shouldComponentUpdate\"); //在组件更新前执行\n\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log(\"2-componentWillUpdate\"); //在shouldComponentUpdate之后执行，如果shouldComponentUpdate返回false则生命周期不执行了\n  }\n\n  componentDidUpdate() {\n    console.log(\"4-componentDidUpdate\"); //所有步骤执行完了，最后执行DidUpdate\n  }\n\n  componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps\");\n  }\n\n  render() {\n    console.log(\"3-render-----组件挂载中\");\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.inputValue,\n          onChange: this.inputChange.bind(this),\n          ref: input => {\n            this.input = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addList.bind(this),\n          children: \" Add Service \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.list.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(JiejieItem, {\n            content: item,\n            index: index,\n            deleteItem: this.deleteItem.bind(this)\n          }, index + item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  inputChange() {\n    this.setState({\n      inputValue: this.input.value\n    });\n  }\n\n  addList() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue]\n    });\n  }\n\n  deleteItem(index) {\n    let newList = this.state.list;\n    newList.splice(index, 1);\n    this.setState({\n      list: newList\n    });\n  }\n\n}\n\nexport default Jiejie;","map":{"version":3,"sources":["/Users/sophiesun/Desktop/ReactDemo/demo01_practice/src/Jiejie.js"],"names":["React","Component","Fragment","JiejieItem","Jiejie","constructor","props","state","inputValue","list","componentWillMount","console","log","componentDidMount","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillReceiveProps","render","inputChange","bind","input","addList","map","item","index","deleteItem","setState","value","newList","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC7B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,cAAjB;AAFK,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;;AACDE,EAAAA,qBAAqB,GAAG;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADsB,CACkB;;AACxC,WAAO,IAAP;AACD;;AACDG,EAAAA,mBAAmB,GAAG;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADoB,CAEpB;AACD;;AACDI,EAAAA,kBAAkB,GAAG;AACnBL,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADmB,CAEnB;AACD;;AACDK,EAAAA,yBAAyB,GAAG;AAC1BN,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACDM,EAAAA,MAAM,GAAG;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,wBACE,QAAC,QAAD;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,UADpB;AAEE,UAAA,QAAQ,EAAE,KAAKW,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAFZ;AAGE,UAAA,GAAG,EAAGC,KAAD,IAAW;AACd,iBAAKA,KAAL,GAAaA,KAAb;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,OAAO,EAAE,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBACG,KAAKb,KAAL,CAAWE,IAAX,CAAgBc,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,8BACE,QAAC,UAAD;AAEE,YAAA,OAAO,EAAED,IAFX;AAGE,YAAA,KAAK,EAAEC,KAHT;AAIE,YAAA,UAAU,EAAE,KAAKC,UAAL,CAAgBN,IAAhB,CAAqB,IAArB;AAJd,aACOK,KAAK,GAAGD,IADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAEDL,EAAAA,WAAW,GAAG;AACZ,SAAKQ,QAAL,CAAc;AACZnB,MAAAA,UAAU,EAAE,KAAKa,KAAL,CAAWO;AADX,KAAd;AAGD;;AACDN,EAAAA,OAAO,GAAG;AACR,SAAKK,QAAL,CAAc;AACZlB,MAAAA,IAAI,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqB,KAAKF,KAAL,CAAWC,UAAhC;AADM,KAAd;AAGD;;AAEDkB,EAAAA,UAAU,CAACD,KAAD,EAAQ;AAChB,QAAII,OAAO,GAAG,KAAKtB,KAAL,CAAWE,IAAzB;AACAoB,IAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACA,SAAKE,QAAL,CAAc;AACZlB,MAAAA,IAAI,EAAEoB;AADM,KAAd;AAGD;;AA9E4B;;AAiF/B,eAAezB,MAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport JiejieItem from \"./JiejieItem\";\n\nclass Jiejie extends Component {\n  //生命周期：在某一时刻可以自动执行的函数\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      list: [\"Head Massage\", \"Foot Massage\"],\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount-----组件将要挂载到页面的时候\");\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件挂载完成的时刻\");\n  }\n  shouldComponentUpdate() {\n    console.log(\"1-shouldComponentUpdate\"); //在组件更新前执行\n    return true;\n  }\n  componentWillUpdate() {\n    console.log(\"2-componentWillUpdate\");\n    //在shouldComponentUpdate之后执行，如果shouldComponentUpdate返回false则生命周期不执行了\n  }\n  componentDidUpdate() {\n    console.log(\"4-componentDidUpdate\");\n    //所有步骤执行完了，最后执行DidUpdate\n  }\n  componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps\");\n  }\n  render() {\n    console.log(\"3-render-----组件挂载中\");\n    return (\n      <Fragment>\n        <div>\n          <input\n            value={this.state.inputValue}\n            onChange={this.inputChange.bind(this)}\n            ref={(input) => {\n              this.input = input;\n            }}\n          />\n          <button onClick={this.addList.bind(this)}> Add Service </button>\n        </div>\n        <ul>\n          {this.state.list.map((item, index) => {\n            return (\n              <JiejieItem\n                key={index + item}\n                content={item}\n                index={index}\n                deleteItem={this.deleteItem.bind(this)}\n              />\n            );\n          })}\n        </ul>\n      </Fragment>\n    );\n  }\n\n  inputChange() {\n    this.setState({\n      inputValue: this.input.value,\n    });\n  }\n  addList() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n    });\n  }\n\n  deleteItem(index) {\n    let newList = this.state.list;\n    newList.splice(index, 1);\n    this.setState({\n      list: newList,\n    });\n  }\n}\n\nexport default Jiejie;\n"]},"metadata":{},"sourceType":"module"}