{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/fetch-data/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchData = () => axios({\n  method: 'GET',\n  url: 'https://api.publicapis.org/entries#'\n});\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isShow, setIsShow] = useState(false);\n  useEffect(() => {\n    fetchData().then(res => {\n      setData(res.data.entries.slice(0, 10));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hello, the data are\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsShow(!isShow),\n      children: \"Click this button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isShow ? data.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"API: \", item.API]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", item.Category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please click button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ypvDiQQkVK0qIPnb2xs2f8WyDCg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sophiesun/Desktop/fetch-data/src/App.js"],"names":["React","useState","useEffect","axios","fetchData","method","url","App","data","setData","isShow","setIsShow","then","res","entries","slice","catch","err","console","log","JSON","stringify","map","item","index","API","Category"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAChBD,KAAK,CAAC;AACJE,EAAAA,MAAM,EAAE,KADJ;AAEJC,EAAAA,GAAG,EAAC;AAFA,CAAD,CADP;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,GACRQ,IADD,CACOC,GAAD,IAAS;AACbJ,MAAAA,OAAO,CAACI,GAAG,CAACL,IAAJ,CAASM,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAAyB,EAAzB,CAAD,CAAP;AACD,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBACE;AAAA,mDAEE;AAAQ,MAAA,OAAO,EAAE,MAAMG,SAAS,CAAC,CAACD,MAAF,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMU,IAAI,CAACC,SAAL,CAAeb,IAAf;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGE,MAAM,GAAGF,IAAI,CAACc,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,0BACE;AAAA,gCACE;AAAA,8BAASD,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,mCAAcF,IAAI,CAACG,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPS,CAAH,gBAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhCQjB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst fetchData = () => \n  axios({\n    method: 'GET',\n    url:'https://api.publicapis.org/entries#'\n  })\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [isShow, setIsShow] = useState(false)\n\n  useEffect(() => {\n    fetchData()\n    .then((res) => {\n      setData(res.data.entries.slice(0,10))\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, [])\n\n  console.log(data)\n\n  return (\n    <div>\n      hello, the data are \n      <button onClick={() => setIsShow(!isShow)}>Click this button</button>\n      <div>{JSON.stringify(data)}</div>\n      {isShow ? data.map((item, index) => {\n        return (\n          <div key={index}>\n            <p>API: {item.API}</p>\n            <p>Category: {item.Category}</p>\n          </div>\n        )\n      }) : <p>Please click button</p>\n    }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}