{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginHooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputWrap, Button, Label } from \"./styles/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginHooks = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  }); // const { username, password } = formData;\n\n  const onChange = e => {\n    // console.log(e.target.name);\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    // event.preventDeafault(): prevent submiting the form until formValue assigned\n    event.preventDefault();\n    const newData = {\n      username: formData.username,\n      password: FormData.password\n    };\n    axios.post(\"https://loginform-fd027-default-rtdb.firebaseio.com/data.json\", newData).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      \"data-testid\": \"login-form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"username\",\n        \"data-testid\": \"username\" // make input username value appear on the input box\n        ,\n        value: formData.username,\n        name: \"username\" // whenever user type something inside input box, onChange event will be executed\n        ,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        \"data-testid\": \"password\",\n        value: formData.password,\n        name: \"password\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginHooks, \"sgeIe0PvpgXJeLdWkBWFgrlYrvY=\");\n\n_c = LoginHooks;\nexport default LoginHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginHooks\");","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginHooks.jsx"],"names":["React","useState","axios","Input","InputWrap","Button","Label","LoginHooks","formData","setFormData","username","password","onChange","e","target","name","value","submitHandler","event","preventDefault","newData","FormData","post","then","response","console","log","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,KAAnC,QAAgD,gBAAhD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC,CADuB,CAMvB;;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtB;AACAJ,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFhB,KAAD,CAAX;AAID,GAND;;AAQA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACAA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAG;AACdV,MAAAA,QAAQ,EAAEF,QAAQ,CAACE,QADL;AAEdC,MAAAA,QAAQ,EAAEU,QAAQ,CAACV;AAFL,KAAhB;AAIAT,IAAAA,KAAK,CACFoB,IADH,CAEI,+DAFJ,EAGIF,OAHJ,EAKGG,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAPH,EAQGG,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVH;AAWD,GAlBD;;AAoBA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAM,qBAAY,YAAlB;AAA+B,MAAA,QAAQ,EAAEX,aAAzC;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,uBAAY,UAHd,CAIE;AAJF;AAKE,QAAA,KAAK,EAAET,QAAQ,CAACE,QALlB;AAME,QAAA,IAAI,EAAC,UANP,CAOE;AAPF;AAQE,QAAA,QAAQ,EAAEE;AARZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,uBAAY,UAHd;AAIE,QAAA,KAAK,EAAEJ,QAAQ,CAACG,QAJlB;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,cAbF,eAqBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE,QAAC,MAAD;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAlED;;GAAML,U;;KAAAA,U;AAoEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputWrap, Button, Label } from \"./styles/login\";\n\nconst LoginHooks = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // const { username, password } = formData;\n\n  const onChange = (e) => {\n    // console.log(e.target.name);\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitHandler = (event) => {\n    // event.preventDeafault(): prevent submiting the form until formValue assigned\n    event.preventDefault();\n    const newData = {\n      username: formData.username,\n      password: FormData.password,\n    };\n    axios\n      .post(\n        \"https://loginform-fd027-default-rtdb.firebaseio.com/data.json\",\n        newData\n      )\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <InputWrap>\n      <form data-testid=\"login-form\" onSubmit={submitHandler}>\n        <Label htmlFor=\"username\">Username:</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          data-testid=\"username\"\n          // make input username value appear on the input box\n          value={formData.username}\n          name=\"username\"\n          // whenever user type something inside input box, onChange event will be executed\n          onChange={onChange}\n        />\n        <Label htmlFor=\"password\">Password:</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          data-testid=\"password\"\n          value={formData.password}\n          name=\"password\"\n          onChange={onChange}\n        />\n        <Button type=\"submit\">Submit</Button>\n        <Button>\n          <a href=\"/\">Cancel</a>\n        </Button>\n      </form>\n    </InputWrap>\n  );\n};\n\nexport default LoginHooks;\n"]},"metadata":{},"sourceType":"module"}