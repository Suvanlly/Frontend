{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginHooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputWrap, Button, Label, LogoutText } from \"./styles/login\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginHooks = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // const { username, password } = formData;\n\n  const changeInputHandler = e => {\n    // console.log(e.target.name);\n    setFormData({ ...formData,\n      // This allows username and password inputbox changes respectively whenever user type something based on the name of the inputbox\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    // event.preventDeafault(): prevent submiting the form until formValue assigned\n    event.preventDefault();\n    const newData = {\n      username: formData.username,\n      password: formData.password\n    };\n    axios.post(\"https://loginform-fd027-default-rtdb.firebaseio.com/data.json\", newData).then(function (response) {\n      console.log(response);\n      setIsLoggedIn(true);\n    }).catch(function (error) {\n      console.log(error);\n      setIsLoggedIn(false);\n    });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      let timer = setTimeout(() => {\n        // console.log(\"user logged out!\");\n        setFormData({\n          username: \"\",\n          password: \"\"\n        });\n        setIsLoggedIn(false);\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputWrap, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        \"data-testid\": \"login-form\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"username\",\n          \"data-testid\": \"username\" // make input username value appear on the input box\n          ,\n          value: formData.username // name of the input allows e.target.name know which inputbox it is when user make changes\n          ,\n          name: \"username\" // whenever user type something inside input box, onChange event will be executed\n          ,\n          onChange: changeInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          id: \"password\",\n          \"data-testid\": \"password\",\n          value: formData.password,\n          name: \"password\",\n          onChange: changeInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          role: \"button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(LogoutText, {\n      children: \"Current Status: Logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 22\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(LogoutText, {\n      children: \"Current Status: Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginHooks, \"s3z+2xuDosBSl84lkxd/iH2ney0=\");\n\n_c = LoginHooks;\nexport default LoginHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginHooks\");","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginHooks.jsx"],"names":["React","useState","useEffect","axios","Input","InputWrap","Button","Label","LogoutText","Link","LoginHooks","formData","setFormData","username","password","isLoggedIn","setIsLoggedIn","changeInputHandler","e","target","name","value","submitHandler","event","preventDefault","newData","post","then","response","console","log","catch","error","timer","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputWrap, Button, Label, LogoutText } from \"./styles/login\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginHooks = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const { username, password } = formData;\n\n  const changeInputHandler = (e) => {\n    // console.log(e.target.name);\n    setFormData({\n      ...formData,\n      // This allows username and password inputbox changes respectively whenever user type something based on the name of the inputbox\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitHandler = (event) => {\n    // event.preventDeafault(): prevent submiting the form until formValue assigned\n    event.preventDefault();\n    const newData = {\n      username: formData.username,\n      password: formData.password,\n    };\n    axios\n      .post(\n        \"https://loginform-fd027-default-rtdb.firebaseio.com/data.json\",\n        newData\n      )\n      .then(function (response) {\n        console.log(response);\n        setIsLoggedIn(true);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setIsLoggedIn(false);\n      });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      let timer = setTimeout(() => {\n        // console.log(\"user logged out!\");\n        setFormData({ username: \"\", password: \"\" });\n        setIsLoggedIn(false);\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <>\n      <InputWrap>\n        <form data-testid=\"login-form\" onSubmit={submitHandler}>\n          <Label htmlFor=\"username\">Username:</Label>\n          <Input\n            type=\"text\"\n            id=\"username\"\n            data-testid=\"username\"\n            // make input username value appear on the input box\n            value={formData.username}\n            // name of the input allows e.target.name know which inputbox it is when user make changes\n            name=\"username\"\n            // whenever user type something inside input box, onChange event will be executed\n            onChange={changeInputHandler}\n          />\n          <Label htmlFor=\"password\">Password:</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            data-testid=\"password\"\n            value={formData.password}\n            name=\"password\"\n            onChange={changeInputHandler}\n          />\n          <Button role=\"button\" type=\"submit\">\n            Submit\n          </Button>\n          <Button>\n            <a href=\"/\">Cancel</a>\n          </Button>\n        </form>\n      </InputWrap>\n      {isLoggedIn && <LogoutText>Current Status: Logged in</LogoutText>}\n      {!isLoggedIn && <LogoutText>Current Status: Logout</LogoutText>}\n    </>\n  );\n};\n\nexport default LoginHooks;\n"]},"metadata":{},"sourceType":"module"}