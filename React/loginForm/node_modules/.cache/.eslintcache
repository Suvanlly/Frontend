[{"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/index.js":"1","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/App.js":"2","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/HomePage/HomePage.jsx":"3","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/HelpCenter/HelpCenter.jsx":"4","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/LoginPage/LoginPage.jsx":"5","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/AboutUs/AboutUs.jsx":"6","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Header/Header.jsx":"7","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/Login.jsx":"8","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Header/styles/header.js":"9","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/styles/login.js":"10","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginAntd.jsx":"11","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/HomePage/styles/HomePage.js":"12","/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginHooks.jsx":"13"},{"size":220,"mtime":1638354047690,"results":"14","hashOfConfig":"15"},{"size":740,"mtime":1636328140307,"results":"16","hashOfConfig":"15"},{"size":350,"mtime":1638353217589,"results":"17","hashOfConfig":"15"},{"size":365,"mtime":1638354531522,"results":"18","hashOfConfig":"15"},{"size":395,"mtime":1638508503229,"results":"19","hashOfConfig":"15"},{"size":356,"mtime":1638354574285,"results":"20","hashOfConfig":"15"},{"size":586,"mtime":1636328140310,"results":"21","hashOfConfig":"15"},{"size":2578,"mtime":1638607970901,"results":"22","hashOfConfig":"15"},{"size":772,"mtime":1638358596053,"results":"23","hashOfConfig":"15"},{"size":1067,"mtime":1641464757214,"results":"24","hashOfConfig":"15"},{"size":1661,"mtime":1636328140316,"results":"25","hashOfConfig":"15"},{"size":269,"mtime":1638355867290,"results":"26","hashOfConfig":"15"},{"size":2911,"mtime":1641471224534,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1m5o60b",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/index.js",[],["56","57"],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/App.js",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/HomePage/HomePage.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/HelpCenter/HelpCenter.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/LoginPage/LoginPage.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/AboutUs/AboutUs.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Header/Header.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/Login.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Header/styles/header.js",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/styles/login.js",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginAntd.jsx",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/pages/HomePage/styles/HomePage.js",[],"/Users/sophiesun/Desktop/Frontend/React/loginForm/src/component/Login/LoginHooks.jsx",["58"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputWrap, Button, Label, LogoutText } from \"./styles/login\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginHooks = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const { username, password } = formData;\n\n  const changeInputHandler = (e) => {\n    // console.log(e.target.name);\n    setFormData({\n      ...formData,\n      // This allows username and password inputbox changes respectively whenever user type something based on the name of the inputbox\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitHandler = (event) => {\n    // event.preventDeafault(): prevent submiting the form until formValue assigned\n    event.preventDefault();\n    const newData = {\n      username: formData.username,\n      password: formData.password,\n    };\n    axios\n      .post(\n        \"https://loginform-fd027-default-rtdb.firebaseio.com/data.json\",\n        newData\n      )\n      .then(function (response) {\n        console.log(response);\n        setIsLoggedIn(true);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setIsLoggedIn(false);\n      });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      let timer = setTimeout(() => {\n        // console.log(\"user logged out!\");\n        setFormData({ username: \"\", password: \"\" });\n        setIsLoggedIn(false);\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <>\n      <InputWrap>\n        <form data-testid=\"login-form\" onSubmit={submitHandler}>\n          <Label htmlFor=\"username\">Username:</Label>\n          <Input\n            type=\"text\"\n            id=\"username\"\n            data-testid=\"username\"\n            // make input username value appear on the input box\n            value={formData.username}\n            // name of the input allows e.target.name know which inputbox it is when user make changes\n            name=\"username\"\n            // whenever user type something inside input box, onChange event will be executed\n            onChange={changeInputHandler}\n          />\n          <Label htmlFor=\"password\">Password:</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            data-testid=\"password\"\n            value={formData.password}\n            name=\"password\"\n            onChange={changeInputHandler}\n          />\n          <Button data-testid=\"button\" type=\"submit\">\n            Submit\n          </Button>\n          <Button>\n            <a href=\"/\">Cancel</a>\n          </Button>\n        </form>\n      </InputWrap>\n      {isLoggedIn && <LogoutText>Current Status: Logged in</LogoutText>}\n      {!isLoggedIn && <LogoutText>Current Status: Logout</LogoutText>}\n    </>\n  );\n};\n\nexport default LoginHooks;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]